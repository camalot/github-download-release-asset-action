#!/usr/bin/env sh
# Based on original work at https://github.com/Legion2/download-release-action/blob/master/gh-dl-release
#
# USAGE
# gh-dl-release <org/repo> <version or 'latest'> <filename> [<github token>]

set -e

if [ $# -lt 3 ] ;then
    echo "Usage: <org/repo> <version or 'latest'> <filename> [<github token>]"
    exit 1
fi

REPO="$1"           # org/repo
VERSION="$2"        # tag name or the word "latest"
ASSET_NAME="$3";    #
FILE="$4"           # the name of your release asset file, e.g. build.tar.gz
TOKEN="$5"          # 
GITHUB_API_ENDPOINT="api.github.com"

alias errcho='>&2 echo'

gh_curl() {
  if [ -z "$TOKEN" ]; then
    curl -sL \
       -H "Accept: application/vnd.github.v3.raw" \
       "$@"
  else
    curl -sL -H "Authorization: token $TOKEN" \
       -H "Accept: application/vnd.github.v3.raw" \
       "$@"
  fi
}

gh_get_asset() {
  if [ -z "$TOKEN" ]; then
    curl -sL -H 'Accept: application/octet-stream' https://$GITHUB_API_ENDPOINT/repos/$REPO/releases/assets/$1
  else
    curl -sL -H "Authorization: token $TOKEN" -H 'Accept: application/octet-stream' https://$GITHUB_API_ENDPOINT/repos/$REPO/releases/assets/$1
  fi
}

if [ "$VERSION" = "latest" ]; then
  RELEASE_URL="https://$GITHUB_API_ENDPOINT/repos/$REPO/releases/latest"
else
  RELEASE_URL="https://$GITHUB_API_ENDPOINT/repos/$REPO/releases/tags/$VERSION"
fi

PARSER=".assets | map(select(.name|test(\"$ASSET_NAME\")))[0].id";

ASSET_ID=$(gh_curl $RELEASE_URL | jq "$PARSER");
if [ "$ASSET_ID" = "null" ]; then
  errcho "ERROR: file not found '$FILE'";
  exit 1;
fi

gh_get_asset $ASSET_ID > "$FILE";
echo "::set-output name=downloadedAsset::${PWD}/$FILE";
echo "::debug::Output Set to: ${PWD}/$FILE";